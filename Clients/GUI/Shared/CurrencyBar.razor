<div class="card text-center mt-5">
    <div class="card-header">
        Currency
    </div>
    <div class="card-body">
        <p class="card-text">
            @if (Rates != null)
            {
                @foreach (var r in Rates)
                {
                    <a class="text-nowrap">@r.Code - @r.Value</a>
                    
                }
            }
            @if (Codes == null || Codes.Count == 0 || ErrorFromServer)
            {
                <div class="spinner-border" role="status">
                    <span class="sr-only">Loading...</span>
                </div>
            }
        </p>
    </div>
</div>
@code {
    [Parameter]
    public List<string> Codes { get; set; }

    List<ExchangeRate> Rates { get; set; }

    public bool ErrorFromServer { get; set; } = false;

    protected override async Task OnInitializedAsync()
    {
        if (Codes != null && Codes.Count > 1)
        {
            CurrencyRequest req = new CurrencyRequest();
            req.CurrencyPublisher = CurrencyExchangeRateProviderTypes.CentralBank;
            req.CurrencyCodes = Codes;
            string url = "http://localhost:5006/News/currencies";

            RestClient<CurrencyRequest, List<ExchangeRate>> client = new RestClient<CurrencyRequest, List<ExchangeRate>>(url, RestRequestType.POST);

            try
            {
                Rates = await client.ExecuteAsync(req);
            }
            catch (Exception)
            {
                ErrorFromServer = true;
                Rates = null;
            }
        }
        else
            await base.OnInitializedAsync();
    }
}
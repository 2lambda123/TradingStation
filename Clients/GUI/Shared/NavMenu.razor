@inject Authentication.AuthStateProvider AuthenticationProvider
@inject NavigationManager NavigationManager

<div class="top-row pl-4 navbar navbar-dark">
    <a class="navbar-brand" href="">Trading Station</a>
    <button class="navbar-toggler" @onclick="ToggleNavMenu">
        <span class="navbar-toggler-icon"></span>
    </button>
</div>

<div class="@NavMenuCssClass" @onclick="ToggleNavMenu">
    <ul class="nav flex-column">
        <AuthorizeView>
            <Authorized>
                <li class="nav-item px-3">
                    <NavLink class="nav-link" href="userinfo" Match="NavLinkMatch.All">
                        <span class="oi oi-people" aria-hidden="true"></span> User Info
                    </NavLink>
                </li>
                <li class="nav-item px-3">
                    <NavLink class="nav-link" href="/" @onclick="() => Logout()" Match="NavLinkMatch.All">
                        <span class="oi oi-account-logout" aria-hidden="true"></span> Log out
                    </NavLink>
                </li>
            </Authorized>
            <NotAuthorized>
                <li class="nav-item px-3">
                    <NavLink class="nav-link" href="signup">
                        <span class="oi oi-plus" aria-hidden="true"></span> Sign up
                    </NavLink>
                </li>
                <li class="nav-item px-3">
                    <NavLink class="nav-link" href="signin">
                        <span class="oi oi-account-login" aria-hidden="true"></span> Sign in
                    </NavLink>
                </li>
            </NotAuthorized>
        </AuthorizeView>

    </ul>
</div>

@code {
    private bool collapseNavMenu = true;

    private string NavMenuCssClass => collapseNavMenu ? "collapse" : null;

    private void ToggleNavMenu()
    {
        collapseNavMenu = !collapseNavMenu;
    }

    public void Logout()
    {
        AuthenticationProvider.MarkSignedOut();
        NavigationManager.NavigateTo("signin");
    }
}
